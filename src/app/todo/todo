==============================================BASIC REACT CARDS DATA DISPLAY========================================
step 1: learn components how do they work? how are they called? can they be nested? limits? +++
2:make a simple home page combining components something with cards?
3: make models to use on cards and pass them to an array after which call them
4:connect them to the cards using for loop. (i was introduced into maping)
5: fix whatever was wrong with the daata passing of the cars+
6: learn next js. what are routes how are they used.
===============================================LOG IN FORM===============================================
7.make a log in form in a log in route. and a sighn in form in a sighn in route++++
8.find a way to fetch data that is not so brute forcy.
9. tea introduced me to hooks learn and use usecase to fetch and save the data.++++
10. what is local storage how to use it.
11. if and else logic to check auth
==============================================LOG IN FORM WITH API AUTH=========================
12. roland whants a working api for auth how to make a nextjs api ? how does it work?+++
13. learn basic axios. what is it? how to use it?
14. make backend api
15.test login with existing data using postman
16.make front end port
17.test with postman
18.make sign up logic
19.make log in logic
20. display a log in on sucess
============================================JWT TOKEN IMPLEMENTATION AND QUALITY OF LIFE FIXES==========================
21. learn jwt and its implementation simply
22.create token++++
23.save on local storage+++
24.redirect to dashboard on sucess or if token exists
25.redirect from dashboard to login if i dont have a token
26.accept me in dashboard if i have a token ==================show roland here
===========================================MINOR FIXES========================================
27.logout function ( delete token or delete local storage)
28.redirect login/register/logout using their corresponding buttons
29.Make THE DAMN PICTURE WORK ALEKS WHY IS THIS TAKING SO LONG
=========================================login and register sepparation========================
30.nda backun e loginit dhe registerit brenda nje folderi auth
31.bej gjith url constante edhe theriti ku duhen
32.formato kodin me pretty
33.put secret in .env and call it
34.make it so login dhe register butoni nuk duken kur je i loguar
35.beje qe  logout buttoni duket vetem kur je i loguar same for dashboardin
36.headeri te jet lart ne cdo faqe per navigim
37. do THE CLASSIC dont have an account? >>>>> Register , ku te ben redirect tek register
==========================================display data for cards from the backend===============================
38. push student data/models to back
39. create routing to display data to the front .
40verify if a token has come
41.split token
42.decrypt the token and check it using secret
43.test them 1 by 1 with post man(kinda failed)
44 connect them
45.make sure cards are still succesfully displayed in the front
========================================minor fixes===============================
46. fix the first register issue it is probably related to array position 1 issue
47.fix the undefined variable that shows after register
=======================================tailwind fixes============================
48.dont have an account register and already have an account ? login quick addition
49.make header with tailwind
50.me te njejten theme bej log in
51.gati njesoj me log in bej sign up
52.same theme bej footerin
53. regullo kartat ose zevendesoi
54. fix redirect issue after sign up
======================================pre-db implementations================================
55.make edit user form
56.make add user form
======================================db implementation and ussage========================
57.skim through postgre doc
58.install postgre and prisma
59.set up postgre and prisma
60.make log in table model using prisma
61.make the log in and register use prisma , set and get data from prisma
62.fix log in and register logic to match the database
====================================student db and add student================================
63.establish university db uml diag
64.create the tables and models for said diagram including dependencies
65.move student maping to api services
66.replace the array you have been using to the database you are using and map to front
67.mer data me hooks nga add user formi
68.mer faculties nga backu dhe coj ne front qe ti fusesh ne select dropdown
69.mapo daten ne dropdown faculties dhe mos haro qe mapi zbehet me string por me array
70.mapo classes
71.beje hook te gjithave nga formi
72.after dropdown selection and field completion make sure every field is completed or dont send data to back at all
73.coje daten ne back dhe bej seed databazes
74. rregullo errorin ne lidhje me YEAR
75.regullo errorin e db
=====================================db adition and speeding things up
76.meso differencen mes indexed the coinstraint  cfar jane dhe pse perdoren, pse na duhen
77. meso cfar do te thote dikush kur thot duhet te bejm maintain indexed
78.create class form +hooks + to back - mos haro te krijosh relation me faculty
79.lidhe me db dhe u be
80. create dhe lidh faculty also send back then to db
81.component board to see faculties and its classes
82.bej fetch data duke ber loop/nest metod qe mund te ket: ubdate axios allows nesting LETS GOOO
83.map to it and show them all
84.delete student on a specific id
85.add another unique field that prevents mismatching faculties with classes assighned to students using prisma
86. learn dynamic routing
87. learn relationship based indexing
88.use get to pass params dynamically to the class end point and pass it to services, turn it to int its a string atm
89.send back only the classes assighned to the passed faculty id
===============================================edit student 6 moving parts with this one might be tricky===============================
91.learn how to pass the data from dashboard to edit-student using useRouter, kalo vec idn
92.me idn e mare kerko datan e lidhur me te ne back - bej assighn ne te njejtat hooks qe do cosh prap
93.kopjova cfar bera ne add student per relationship based options
94.pastaj thjeshte duhet ti ve default value ne fields ato qe kam mar nga backu
95. THE TRICKY PARTTTT si dreqin supozohet ti ve value opsioneve qe korsepondojn me indexet + ti bejmatch me klassen
I HAVE AN IDEA
96. IT ALREADY USES ID I CAN JUST TELL IT TO LOOK AT THE ONE I WHANT. I AM THE HONORED ONE!!!!!! THE ONE ABOVE ALLLLLL
ubdate i broke it...........aparently punon me faculty por klasa meqe nuk shef change tek faculty change nuk me vjen....
97.USE USE-EFFECT DHE PERDOR DICKA QE NDRYSHON KUR VJEN DATA NGA BACKU SI TRIGER(facultyId?). I AM THE ONE!
it is not working.....pse....data qe vjen nuk esht undefined THEN WTF IS IT....OH ZOT ISHTE FKG " " E QUAN INICIALIZIMIN
SI FKG TRIGER BROOOOOOOOOOOOOOO this is retarded. ORE MIR AJO PO PSE SE BEN TRIGER PRAP KUR VJEN DATA NGA BAKU?.
update-  mund te zgjidhet me nje if = " " return nothing statement SJA KAM IDEN PSE DUHET BUT WE RUN WITH IT BABY
98. New problem tani nuk ndroj dot klasen me zgjedh perseri baziken ose defaultin pse?????? find out
99.made all class related variables one use state that changes state and its fixed. prolly called the wrong one somewhere
100.push to back
101.make ubdate student services AND BOOM WE ARE DONE WITH THIS PART
------------------------------------clean up-----------------------------------------------
102.delete unused code, and ts .
103.SEPARATE  SERVICES NOT ALL IN ONE , DONT BE LAZY\
104. limit and logic testing
105. found a logical issue i think i know how to fix it but itll be tough , alot of moving parts
106.found 2nd logical issue that allows me to break the program
107.delete useless comments dhe shto komente te reja , specifikisht per duplikimin dhe pse e vura se ngela tu e harru
108. aty ku ska me nevoj per metoda ne use state perdor arrow functions per me dirrekt, beje tek te gjitha
109.more minor fixes
--------------------------------token implementation 2.0--------------------------------------
110implement middleware
111. mass local storage to middleware
112.look at middleware token implementation with jose
113.make register token implementatin
114.make login token implementation
115.make token logic on middle ware if its missiong if you are logged in etc
116.duhet ta kthej ne middleware
117.duhet te rregulloj pak llogjiken  e login/registerit
--------------------------------middleware---------------------------------------------------------
118.fix middleware logic
119.set a global use-effect token that only loads after client loads
120.set a loading state so get data does not run before the token has arrived
121.futa header me tokenin ne cdo req delete,edit,createF,createC,createS
122.make logic so request is sent only after recieving the token and if you have not recieved it at all sent us to login
123.NVM LEARN INTERCEPTORS INSTEAD
124.use axios interceptors to attach the token to every request
125.now add status codes to all
126.fix axiosinterceptor import redundancy
127.check toastify doc
128.perdor toastdy per erroret
129.tani qe interceptori per te cuar requeste u mesua meso per te mar to fix redundancy
130. pastaj perdore
131. futa toastify per exeptions dhe erroret ne request
132.fix toastify redundancy------------------------
133.fix axios redundancy
134. redundancy per kodin e riperdorur
135.kam shum variabla duhen me pak mos i nda ardhjen dhe cimin
136.duhet te ndroj menyren si e regullova edit student error me nje menyr tjeter , it looks like sht .


idk kur:
118.meso ku rruhen dhe rregjistrohen
119refresh token





91.make faculty and class deletable , if a faculty is deleted all classes within it must be deleted aswell.
92.add a are you sure? pop up ( here i learn about little pop ups?)
93.meso cfare jane
94.make token refresh after 1 hour(sedi si do e bej ama kam nje ide)

